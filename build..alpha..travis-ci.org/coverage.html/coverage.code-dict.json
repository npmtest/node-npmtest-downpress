{"/home/travis/build/npmtest/node-npmtest-downpress/test.js":"/* istanbul instrument in package npmtest_downpress */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-downpress/lib.npmtest_downpress.js":"/* istanbul instrument in package npmtest_downpress */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_downpress = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_downpress = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-downpress/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-downpress && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_downpress */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_downpress\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_downpress.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_downpress.rollup.js'] =\n            local.assetsDict['/assets.npmtest_downpress.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_downpress.__dirname + '/lib.npmtest_downpress.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/binaries/Binary.js":"#!/usr/bin/env node\n\n\n    \"use strict\";\n\n\n\t/**\n\t *  This is constructed always when user types `downpress` to the terminal\n\t */\n    var Downpress = function(){\n\n\t\tvar that = this;\n\n\t    // inherit \"this\" from the class boilerplate (underscore, events..)\n        require(\"../library/_Boilerplate\").call(this);\n\n\t    // if is not a valid package, break software\n        this.packageJsonParsing();\n\n\t\t// after package.json is parsed successfully\n\t\tthis.on(\"package-parsed\", function(){\n\t\t\tthat.parseSecondConsoleArgument();\n\t\t});\n\n    };\n\n\n    require(\"util\").inherits(Downpress, require(\"../library/_Boilerplate\"));\n\n\n\t/**\n\t *  Parsing second argument typed to console (like `downpress run`)\n\t */\n\tDownpress.prototype.parseSecondConsoleArgument = function(){\n\n\t\t// user types in the console also a second parameter\n\t\tvar consoleArgument = process.argv[2];\n\t\tswitch (consoleArgument) {\n\n\t\t\tcase \"report\" :\n\t\t\t\tthis.initReport(); break;\n\n\t\t\tcase \"help\" :\n\t\t\t\tthis.initHelp(); break;\n\n\t\t\tcase \"run\" :\n\t\t\t\tthis.initRun(); break;\n\n\t\t\tcase \"init\" :\n\t\t\t\tthis.initInit(); break;\n\n\t\t\tdefault :\n\t\t\t\tthis.initWithoutArgument(); break;\n\n\t\t}\n\n\t};\n\n\n\t/**\n\t *  Attach on website this, user can send also the personal data about his computer and OS and Node\n\t */\n    Downpress.prototype.initReport = function(){\n\n        console.log(\"\");\n        this.log(\"report a bug?\");\n        this.log(\"  1: browse website github.com/downpress/package/issues\");\n        this.log(\"  2: copy below infos about your computer and go ahead!\");\n\n        console.log(\"\");\n        this.log(\"versions:\");\n        this.log(\"  node: \" + process.versions.node);\n        this.log(\"  http_parser: \" + process.versions.http_parser);\n        this.log(\"  v8: \" + process.versions.v8);\n        this.log(\"  ares: \" + process.versions.ares);\n        this.log(\"  uv: \" + process.versions.uv);\n        this.log(\"  zlib: \" + process.versions.zlib);\n        this.log(\"  modules: \" + process.versions.modules);\n        this.log(\"  openssl: \" + process.versions.openssl);\n\n        console.log(\"\");\n        this.log(\"details:\");\n        this.log(\"  arch: \" + process.arch);\n        this.log(\"  platform: \" + process.platform);\n        this.log(\"  argv: \" + process.argv);\n        this.log(\"  env.PWD: \" + process.env.PWD);\n        this.log(\"  env.OLDPWD: \" + process.env.OLDPWD);\n        this.log(\"  env._: \" + process.env._);\n        this.log(\"  pid: \" + process.pid);\n        this.log(\"  features.debug: \" + process.features.debug);\n        this.log(\"  features.ipv6: \" + process.features.ipv6);\n        this.log(\"  version openssl: \" + process.versions.openssl);\n\n        console.log(\"\");\n\t    process.kill();\n\n    };\n\n\n\t/**\n\t *  When user type `downpress help`, TODO should be implemented in next version for every command\n\t */\n    Downpress.prototype.initHelp = function(){\n\n        this.log(\"help is gonna be implemented in version 0.3, sorry\", true);\n\t    process.kill();\n\n    };\n\n\n\t/**\n\t *  When user type `downpress run` and package.json does exist in root of project\n\t */\n    Downpress.prototype.initRun = function(){\n\n\t    var port = global.downpress.config[\"localhost-port\"];\n\n        console.log();\n        this.log(\"browse http://localhost:\" + port + \" for a build preview\");\n        this.log(\"watching \"+process.env.PWD);\n\n        this.createTemplatesFolder();\n        this.watchLocalhost();\n        this.watchDirectories();\n\n    };\n\n\n\t/**\n\t *  When user type `downpress init` and wants to create a new project boilerplate\n\t */\n    Downpress.prototype.initInit = function(){\n\n        var that = this;\n        var i = 0;\n\n        function handleFolderErrors(err){\n\n            if (err) {\n                that.log(\"ERROR: folder \"+ err.path + \"already does exist!\", true);\n                process.kill();\n            } else if (++i===9) {\n\t            that.whenAllInitFoldersAreCreated();\n            }\n\n        }\n\n        this.fs.mkdir(\"./articles\", handleFolderErrors);\n\t    this.fs.mkdir(\"./%templates\", handleFolderErrors);\n\t    this.fs.mkdir(\"./%build\", handleFolderErrors);\n\t    this.fs.mkdir(\"./page\", handleFolderErrors);\n\t    this.fs.mkdir(\"./statics\", handleFolderErrors);\n\t    this.fs.mkdir(\"./articles/1st\", handleFolderErrors);\n\t    this.fs.mkdir(\"./articles/2nd\", handleFolderErrors);\n\t    this.fs.mkdir(\"./articles/3rd\", handleFolderErrors);\n\t    this.fs.mkdir(\"./articles/4th\", handleFolderErrors);\n\n\t    // TODO\n\t    // maybe this can be created without files, just with some inteligent parameter\n\t    // something like ~ i want create this file also if the root directory doesn't exist\n\n    };\n\n\n\t/**\n\t *  On command `init` create also files, after directories are already created\n\t */\n    Downpress.prototype.whenAllInitFoldersAreCreated = function(){\n\n        var i = 0;\n\t    var that = this;\n\n        function handleFolderErrors(err){\n\n            if (err) {\n                that.log(\"file already exists: \"+ err.path, true);\n                process.kill();\n            } else if (++i===13) {\n\t            that.log(\"success —- all files created successfully\");\n                that.log(\"type `downpress run` and open browser\");\n            }\n\n        }\n\n        var msg = {};\n\n        var msg1 = \"<!-- in this file use classic html -->\\n{{ local._content }}\";\n        var msg2 = \"--\\ntemplate : article\\n---\\n\\n**hello, i am content of articles!**\";\n        var msg7 = \"--\\ntemplate : index\\n---\\n\\n**hello, i am in /index.md!**\";\n        var msg6 = \"--\\ntemplate : page\\n---\\n\\n**hello, i am in /page/index.md**\";\n        var msg4 = \"if you will not use '---' meta tags in MD,\\nfile is copied only and not parsed\";\n        var msg3 = \"html { background: #ccc }\";\n        var msg8 = \"console.log('hello');\";\n        var msg5 = \"all content in this folder will be removed!! and replaced with build\";\n\n        msg.index = \"\\n\\t{{ local._content }}<br>\\n\";\n        msg.index += \"\\n\\t<script src=\\\"/statics/client.js\\\"></script>\\n\";\n        msg.index += \"\\n\\t<link href=\\\"statics/stylesheet.css\\\" rel=\\\"stylesheet\\\" /><br>\\n\";\n        msg.index += \"\\t<a href=\\\"/articles/1st/\\\">1st blog</a><br/>\\n\";\n        msg.index += \"\\t<a href=\\\"/articles/2nd/\\\">2nd blog</a><br/>\\n\";\n        msg.index += \"\\t<a href=\\\"/articles/3rd/\\\">3rd blog</a><br/>\\n\";\n        msg.index += \"\\t<a href=\\\"/articles/4th/\\\">4th blog</a><br/>\\n\";\n        msg.index += \"\\t<a href=\\\"/page/\\\">page</a><br/>\\n\";\n\n\t    this.fs.appendFile(\"./readme.md\", msg4, handleFolderErrors);\n\t    this.fs.appendFile(\"./%templates/index.html\", msg.index, handleFolderErrors);\n\t    this.fs.appendFile(\"./%templates/page.html\", msg1, handleFolderErrors);\n\t    this.fs.appendFile(\"./%templates/article.html\", msg1, handleFolderErrors);\n\t    this.fs.appendFile(\"./%build/build-folder.md\", msg5, handleFolderErrors);\n\t    this.fs.appendFile(\"./page/index.md\", msg6, handleFolderErrors);\n\t    this.fs.appendFile(\"./articles/1st/index.md\", msg2, handleFolderErrors);\n\t    this.fs.appendFile(\"./articles/2nd/index.md\", msg2, handleFolderErrors);\n\t    this.fs.appendFile(\"./articles/3rd/index.md\", msg2, handleFolderErrors);\n\t    this.fs.appendFile(\"./articles/4th/index.md\", msg2, handleFolderErrors);\n\t    this.fs.appendFile(\"./statics/stylesheet.css\", msg3, handleFolderErrors);\n\t    this.fs.appendFile(\"./statics/client.js\", msg8, handleFolderErrors);\n        this.fs.appendFile(\"./index.md\", msg7, handleFolderErrors);\n\n    };\n\n\n\t/**\n\t *  When Downpress is run without a valid argument (second - `downpress something`)\n\t */\n    Downpress.prototype.initWithoutArgument = function(){\n\n\t    this.log(\"ERROR -- use only subcommands: `run`, `init` or `report`\", true);\n\t    this.log(\"downpress killed\", true);\n\t    process.kill();\n\n    };\n\n\n\t/**\n\t *  Check if %Templates folder does exist, if no - create a new one, if yes - nothing\n\t */\n    Downpress.prototype.createTemplatesFolder = function(){\n\n\t    // TODO mkdir is synch operation because this is not happening everytime\n\t    // the relevant question ~ how to solve callbacks if are optional?\n\n\t    var FOLDER = \"./\" + global.downpress.config[\"dir-templates\"];\n\t    var that = this;\n\n\t    function doesntExists(){\n\t\t    that.fs.mkdirSync(FOLDER);\n\t\t    that.log(FOLDER + \" folder created to the root of a website\", true);\n\t    }\n\n\t    this.fs.exists(FOLDER, function(exists){\n\t\t    if (!exists) { doesntExists(); }\n\t    });\n\n    };\n\n\n\t/**\n\t *  Create the server on localhost with an optional port (default 8088)\n\t */\n    Downpress.prototype.watchLocalhost = function(){\n\n        var connect = require(\"connect\");\n\t    var buildFolder = \"./\" + global.downpress.config[\"dir-build\"];\n        var options = connect().use(connect.static(buildFolder));\n\n\t    var server = require(\"http\").createServer(options);\n\n\t    server.listen(8088);\n\t    server.on(\"error\", (function(error){\n\t\t    this.portAlreadyExists(error);\n\t    }).bind(this));\n\n    };\n\n\n\t/**\n\t *  If port is already listening on something, report error to console\n\t */\n\tDownpress.prototype.portAlreadyExists = function(error){\n\n\t\tvar isAlreadyUsed = (\"EADDRINUSE\"===error.code);\n\t\tvar usedPort = global.downpress.config[\"localhost-port\"];\n\n\t\tif (isAlreadyUsed) {\n\n\t\t\tthis.log(\"ERROR: port \"+usedPort+\" is already used by other process (maybe with downpress)\", true);\n\t\t\tthis.log(\"maybe your have downpress already run somewhere (??)\", true);\n\t\t\tthis.log(\"if you want to use more downpress ins. in one moment, change port in package.json\", true);\n\t\t\tconsole.log();\n\n\t\t} else {\n\n\t\t\tthis.log(\"TODO: this is unknown error of server creating\", true);\n\t\t\tthis.log(\"please report this, so we can handle this error\", true);\n\t\t\tconsole.log(error);\n\n\t\t}\n\n\t\tprocess.kill();\n\n\t};\n\n\n\t/**\n\t *  Chokidar options for watcher of folders, what should be watched, in which interval\n\t */\n    Downpress.prototype.chokidarOptions = function(){\n\n\t    return {\n\t\t    // ignored : global.downpress.config[\"watch-ignored\"],\n\t\t    // persistent : true,\n\t\t    // interval : global.downpress.config[\"watch-interval\"],\n\t\t    // binaryInterval : global.downpress.config[\"watch-interval-binaries\"],\n\t\t    // ignoreInitial : true\n\t    };\n\n    };\n\n\n\t/**\n\t *  Choikar watches all folders with settings and on change runs Plugins.js\n\t */\n    Downpress.prototype.watchDirectories = function(){\n\n\t    var options = this.chokidarOptions();\n\t    var that = this;\n        global.downpress.isGenerating = false;\n\n        // initial build without any inital changes, just needs to be build\n        global.downpress.isInitial = true;\n        require(\"./Plugins\")();\n\n        // watch every change in project\n        require(\"gaze\")(\"**/*\", function(err) {\n\n            if (err) throw err;\n\n            this.on(\"all\", function(event, filepath) {\n                that.onWatchingChangeChoikar(event, filepath);\n            });\n\n        });\n\n\n\n    };\n\n\n\t/**\n\t *  Run on every change of Choikar in all directories\n\t */\n\tDownpress.prototype.onWatchingChangeChoikar = function(event, path){\n\n\t\tvar that = this;\n\n        var buildDir = \"/\" + global.downpress.config[\"dir-build\"] + \"/\";\n        if (path.indexOf(buildDir)!==-1) { return; }\n\n\t\tglobal.downpress.lastChanged = { event : event, path : path };\n\n        // what if next change is faster than folder is regenerated?\n\t\tif (!global.downpress.isGenerating) {\n\t\t\tthat.log(\"`\"+event+\"` in `\"+path +\"`\");\n\t\t\trequire(\"./Plugins\")();\n\t\t}\n\n\t};\n\n\n\t/**\n\t *  Read package.json file from filesystem, this file is mandatory\n\t */\n    Downpress.prototype.packageJsonParsing = function(){\n\n\t    // package.json is a convention used in nodejs/grunt prjts\n\t    var FILE_NAME = \"./package.json\";\n\t    var that = this;\n\n\t    // read package from filesystem, check if is there\n\t    this.fs.readFile(FILE_NAME, function(error, data){\n            if (error) { that.errorOnPackageJsonRead(error); }\n            // TODO unvalid json error catch\n            var parsedJsonFile = JSON.parse(data);\n            that.successOnPackageJsonRead(parsedJsonFile);\n\t    });\n\n\t    // this is global object valid everywhere in application\n\t    global.downpress = {};\n\n    };\n\n\n\t/**\n\t *  When file package.json does exist\n\t */\n\tDownpress.prototype.successOnPackageJsonRead = function(data){\n\n\t\t// if package.json file doens't contain downpress object, throw error\n\t\tvar isDownpressPackage = data.downpress;\n\t\tif (!isDownpressPackage) { this.errorOnMissingDownpressInPackage(); }\n\n\t\t// we can access to whole package.json file via package object\n\t\tglobal.downpress.package = data;\n\n\t\t// or we can access to downpress object directly and edit it)\n\t\tglobal.downpress.config = data.downpress;\n\n\t\t// if port is not defined, set default to 8088\n\t\tglobal.downpress.config[\"localhost-port\"] = data.downpress[\"localhost-port\"] || \"8088\";\n\t\tglobal.downpress.config[\"localhost-port\"] += \"\"; // sanitate in case of a number\n\n\t\t// check existing name of templates folder\n\t\tglobal.downpress.config[\"dir-templates\"] = data.downpress[\"dir-templates\"] || \"%templates\";\n\n\t\t// check existing name of build folder\n\t\tglobal.downpress.config[\"dir-build\"] = data.downpress[\"dir-build\"] || \"%build\";\n\n\t\t// interval of text files polling\n\t\tglobal.downpress.config[\"watch-interval\"] = data.downpress[\"watch-interval\"] || \"50\";\n\t\tglobal.downpress.config[\"watch-interval\"] += \"\";\n\n\t\t// interval of text files polling\n\t\tglobal.downpress.config[\"watch-interval-binaries\"] = data.downpress[\"watch-interval-binaries\"] || \"300\";\n\t\tglobal.downpress.config[\"watch-interval-binaries\"] += \"\";\n\n\t\t// delimiter of header in markdown files for meta data\n\t\tglobal.downpress.config[\"markdown-delimiter\"] = data.downpress[\"markdown-delimiter\"] || \"---\";\n\n\t\t// interval of text files polling\n\t\t// TODO, this needs to be implemented, as regexp or function or array\n\t\tglobal.downpress.config[\"watch-ignored\"] = /%build/;\n\n\t\t// package.json exists and is parsed successfully\n\t\tthis.emit(\"package-parsed\");\n\n\t};\n\n\n\t/**\n\t *  When file package.json doesn't exists in root of project (when DP is run)\n\t */\n\tDownpress.prototype.errorOnPackageJsonRead = function(error){\n\n\t\tvar isNotExists = error.code = \"ENOENT\";\n\t\tif (!isNotExists) { return; }\n\n\t\t// log error message\n\t\tthis.log(\"ERROR\", true);\n\t\tthis.log(\"  reason: file package.json doesn't exists in project\", true);\n\t\tthis.log(\"  solution: create file package.json in your root\", true);\n\n\t\t// kill process and finish the package run\n\t\tprocess.kill();\n\n\t};\n\n\n\t/**\n\t *  When we have a package.json file, but inside is missing required \"downpress\" object\n\t */\n\tDownpress.prototype.errorOnMissingDownpressInPackage = function(){\n\n\t\t// log error message\n\t\tthis.log(\"ERROR\", true);\n\t\tthis.log(\"  reason: file package.json has no object downpress\", true);\n\t\tthis.log(\"  solution: create in package.json 'downpress : {}' object\", true);\n\n\t\t// kill process and finish the package run\n\t\tprocess.kill();\n\n\t};\n\n\n    // run application\n\n    new Downpress();\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/library/_Boilerplate.js":"\n\n\t\"use strict\";\n\n\n    var events = require(\"events\");\n\n\n\tvar Boilerplate = function() {\n\n        events.EventEmitter.call(this);\n\n        this.initUnderscore();\n\n    };\n\n\n\trequire(\"util\").inherits(Boilerplate, events.EventEmitter);\n\n\n    Boilerplate.prototype.initUnderscore = function(){\n\n        var that = this;\n\n        require(\"../mdls/underscore/export\")((function(underscore){\n\n            this.underscore = underscore;\n\n        }).bind(this));\n\n\t};\n\n\n    Boilerplate.prototype.log = function(message, isError){\n\n        var log;\n        require(\"colors\");\n\n        log = new Date().toLocaleTimeString().grey;\n        log += \": \".grey;\n\n        if (isError) {\n            log += message.red.bold\n        } else {\n            log += message.blue.bold;\n        }\n\n        console.log(log);\n\n    };\n\n\n    /**\n     *  Gets list of all files from directory\n     */\n    Boilerplate.prototype.walkFiles = function(directory, callback){\n\n        var walker = require(\"walk\").walk(directory, { filters: [\".git\", \".svn\", \".DS_Store\"] });\n        var files = [];\n\n        walker.on(\"file\", function(root, fileStats, next) {\n            files.push(root + \"/\" + fileStats.name);\n            next();\n        });\n\n        walker.on(\"end\", function() {\n            callback(files);\n        });\n\n    };\n\n\n\n\tBoilerplate.prototype.fs = require(\"fs-extra\");\n\n\n\tmodule.exports = Boilerplate;\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/underscore/export.js":"\n\n    \"use strict\";\n\n\n    module.exports = function(callback){\n\n        // normal require of underscore for nodejs\n        var _underscore = require(\"./_underscore-1.5.2.js\");\n\n        // connect underscore string into\n        _underscore.mixin(require(\"./_undersstring-2.3.3.js\").exports());\n\n        // change teamplate settings for mustache\n        _underscore.templateSettings = {\n            evaluate:    /\\{\\{#([\\s\\S]+?)\\}\\}/g, // {{# console.log(\"blah\") }}\n            interpolate: /\\{\\{[^#\\{]([\\s\\S]+?)[^\\}]\\}\\}/g, // {{ title }}\n            escape:      /\\{\\{\\{([\\s\\S]+?)\\}\\}\\}/g // {{{ <script> }}}\n        };\n\n        callback(_underscore);\n\n    };\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/underscore/_underscore-1.5.2.js":"//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Establish the object that gets returned to break out of a loop iteration.\n  var breaker = {};\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    concat           = ArrayProto.concat,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeForEach      = ArrayProto.forEach,\n    nativeMap          = ArrayProto.map,\n    nativeReduce       = ArrayProto.reduce,\n    nativeReduceRight  = ArrayProto.reduceRight,\n    nativeFilter       = ArrayProto.filter,\n    nativeEvery        = ArrayProto.every,\n    nativeSome         = ArrayProto.some,\n    nativeIndexOf      = ArrayProto.indexOf,\n    nativeLastIndexOf  = ArrayProto.lastIndexOf,\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object via a string identifier,\n  // for Closure Compiler \"advanced\" mode.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.5.2';\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles objects with the built-in `forEach`, arrays, and raw objects.\n  // Delegates to **ECMAScript 5**'s native `forEach` if available.\n  var each = _.each = _.forEach = function(obj, iterator, context) {\n    if (obj == null) return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n      for (var i = 0, length = obj.length; i < length; i++) {\n        if (iterator.call(context, obj[i], i, obj) === breaker) return;\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;\n      }\n    }\n  };\n\n  // Return the results of applying the iterator to each element.\n  // Delegates to **ECMAScript 5**'s native `map` if available.\n  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results.push(iterator.call(context, value, index, list));\n    });\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.\n  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduce && obj.reduce === nativeReduce) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);\n    }\n    each(obj, function(value, index, list) {\n      if (!initial) {\n        memo = value;\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, value, index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.\n  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {\n    var initial = arguments.length > 2;\n    if (obj == null) obj = [];\n    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {\n      if (context) iterator = _.bind(iterator, context);\n      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);\n    }\n    var length = obj.length;\n    if (length !== +length) {\n      var keys = _.keys(obj);\n      length = keys.length;\n    }\n    each(obj, function(value, index, list) {\n      index = keys ? keys[--length] : --length;\n      if (!initial) {\n        memo = obj[index];\n        initial = true;\n      } else {\n        memo = iterator.call(context, memo, obj[index], index, list);\n      }\n    });\n    if (!initial) throw new TypeError(reduceError);\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, iterator, context) {\n    var result;\n    any(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Delegates to **ECMAScript 5**'s native `filter` if available.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);\n    each(obj, function(value, index, list) {\n      if (iterator.call(context, value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, iterator, context) {\n    return _.filter(obj, function(value, index, list) {\n      return !iterator.call(context, value, index, list);\n    }, context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Delegates to **ECMAScript 5**'s native `every` if available.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = true;\n    if (obj == null) return result;\n    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);\n    each(obj, function(value, index, list) {\n      if (!(result = result && iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Delegates to **ECMAScript 5**'s native `some` if available.\n  // Aliased as `any`.\n  var any = _.some = _.any = function(obj, iterator, context) {\n    iterator || (iterator = _.identity);\n    var result = false;\n    if (obj == null) return result;\n    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);\n    each(obj, function(value, index, list) {\n      if (result || (result = iterator.call(context, value, index, list))) return breaker;\n    });\n    return !!result;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;\n    return any(obj, function(value) {\n      return value === target;\n    });\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, function(value){ return value[key]; });\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs, first) {\n    if (_.isEmpty(attrs)) return first ? void 0 : [];\n    return _[first ? 'find' : 'filter'](obj, function(value) {\n      for (var key in attrs) {\n        if (attrs[key] !== value[key]) return false;\n      }\n      return true;\n    });\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.where(obj, attrs, true);\n  };\n\n  // Return the maximum element or (element-based computation).\n  // Can't optimize arrays of integers longer than 65,535 elements.\n  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)\n  _.max = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.max.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return -Infinity;\n    var result = {computed : -Infinity, value: -Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed > result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iterator, context) {\n    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {\n      return Math.min.apply(Math, obj);\n    }\n    if (!iterator && _.isEmpty(obj)) return Infinity;\n    var result = {computed : Infinity, value: Infinity};\n    each(obj, function(value, index, list) {\n      var computed = iterator ? iterator.call(context, value, index, list) : value;\n      computed < result.computed && (result = {value : value, computed : computed});\n    });\n    return result.value;\n  };\n\n  // Shuffle an array, using the modern version of the \n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var rand;\n    var index = 0;\n    var shuffled = [];\n    each(obj, function(value) {\n      rand = _.random(index++);\n      shuffled[index - 1] = shuffled[rand];\n      shuffled[rand] = value;\n    });\n    return shuffled;\n  };\n\n  // Sample **n** random values from an array.\n  // If **n** is not specified, returns a single random element from the array.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (arguments.length < 2 || guard) {\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // An internal function to generate lookup iterators.\n  var lookupIterator = function(value) {\n    return _.isFunction(value) ? value : function(obj){ return obj[value]; };\n  };\n\n  // Sort the object's values by a criterion produced by an iterator.\n  _.sortBy = function(obj, value, context) {\n    var iterator = lookupIterator(value);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iterator.call(context, value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, value, context) {\n      var result = {};\n      var iterator = value == null ? _.identity : lookupIterator(value);\n      each(obj, function(value, index) {\n        var key = iterator.call(context, value, index, obj);\n        behavior(result, key, value);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, key, value) {\n    (_.has(result, key) ? result[key] : (result[key] = [])).push(value);\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, key, value) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, key) {\n    _.has(result, key) ? result[key]++ : result[key] = 1;\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iterator, context) {\n    iterator = iterator == null ? _.identity : lookupIterator(iterator);\n    var value = iterator.call(context, obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = (low + high) >>> 1;\n      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    return (n == null) || guard ? array[0] : slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if ((n == null) || guard) {\n      return array[array.length - 1];\n    } else {\n      return slice.call(array, Math.max(array.length - n, 0));\n    }\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, (n == null) || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    each(input, function(value) {\n      if (_.isArray(value) || _.isArguments(value)) {\n        shallow ? push.apply(output, value) : flatten(value, shallow, output);\n      } else {\n        output.push(value);\n      }\n    });\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iterator, context) {\n    if (_.isFunction(isSorted)) {\n      context = iterator;\n      iterator = isSorted;\n      isSorted = false;\n    }\n    var initial = iterator ? _.map(array, iterator, context) : array;\n    var results = [];\n    var seen = [];\n    each(initial, function(value, index) {\n      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {\n        seen.push(value);\n        results.push(array[index]);\n      }\n    });\n    return results;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(_.flatten(arguments, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var rest = slice.call(arguments, 1);\n    return _.filter(_.uniq(array), function(item) {\n      return _.every(rest, function(other) {\n        return _.indexOf(other, item) >= 0;\n      });\n    });\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));\n    return _.filter(array, function(value){ return !_.contains(rest, value); });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    var length = _.max(_.pluck(arguments, \"length\").concat(0));\n    var results = new Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, '' + i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),\n  // we need this function. Return the position of the first occurrence of an\n  // item in an array, or -1 if the item is not included in the array.\n  // Delegates to **ECMAScript 5**'s native `indexOf` if available.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var hasIndex = from != null;\n    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {\n      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);\n    }\n    var i = (hasIndex ? from : array.length);\n    while (i--) if (array[i] === item) return i;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = arguments[2] || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var idx = 0;\n    var range = new Array(length);\n\n    while(idx < length) {\n      range[idx++] = start;\n      start += step;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError;\n    args = slice.call(arguments, 2);\n    return bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      ctor.prototype = func.prototype;\n      var self = new ctor;\n      ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (Object(result) === result) return result;\n      return self;\n    };\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context.\n  _.partial = function(func) {\n    var args = slice.call(arguments, 1);\n    return function() {\n      return func.apply(this, args.concat(slice.call(arguments)));\n    };\n  };\n\n  // Bind all of an object's methods to that object. Useful for ensuring that\n  // all callbacks defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var funcs = slice.call(arguments, 1);\n    if (funcs.length === 0) throw new Error(\"bindAll must be passed function names\");\n    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memo = {};\n    hasher || (hasher = _.identity);\n    return function() {\n      var key = hasher.apply(this, arguments);\n      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));\n    };\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){ return func.apply(null, args); }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    options || (options = {});\n    var later = function() {\n      previous = options.leading === false ? 0 : new Date;\n      timeout = null;\n      result = func.apply(context, args);\n    };\n    return function() {\n      var now = new Date;\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = new Date();\n      var later = function() {\n        var last = (new Date()) - timestamp;\n        if (last < wait) {\n          timeout = setTimeout(later, wait - last);\n        } else {\n          timeout = null;\n          if (!immediate) result = func.apply(context, args);\n        }\n      };\n      var callNow = immediate && !timeout;\n      if (!timeout) {\n        timeout = setTimeout(later, wait);\n      }\n      if (callNow) result = func.apply(context, args);\n      return result;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = function(func) {\n    var ran = false, memo;\n    return function() {\n      if (ran) return memo;\n      ran = true;\n      memo = func.apply(this, arguments);\n      func = null;\n      return memo;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return function() {\n      var args = [func];\n      push.apply(args, arguments);\n      return wrapper.apply(this, args);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var funcs = arguments;\n    return function() {\n      var args = arguments;\n      for (var i = funcs.length - 1; i >= 0; i--) {\n        args = [funcs[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = nativeKeys || function(obj) {\n    if (obj !== Object(obj)) throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = new Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = new Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    each(keys, function(key) {\n      if (key in obj) copy[key] = obj[key];\n    });\n    return copy;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj) {\n    var copy = {};\n    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));\n    for (var key in obj) {\n      if (!_.contains(keys, key)) copy[key] = obj[key];\n    }\n    return copy;\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    each(slice.call(arguments, 1), function(source) {\n      if (source) {\n        for (var prop in source) {\n          if (obj[prop] === void 0) obj[prop] = source[prop];\n        }\n      }\n    });\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a == 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className != toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, dates, and booleans are compared by value.\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return a == String(b);\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for\n        // other numeric values.\n        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a == +b;\n      // RegExps are compared by their source patterns and flags.\n      case '[object RegExp]':\n        return a.source == b.source &&\n               a.global == b.global &&\n               a.multiline == b.multiline &&\n               a.ignoreCase == b.ignoreCase;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] == a) return bStack[length] == b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&\n                             _.isFunction(bCtor) && (bCtor instanceof bCtor))) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0, result = true;\n    // Recursively compare objects and arrays.\n    if (className == '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size == b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      for (var key in a) {\n        if (_.has(a, key)) {\n          // Count the expected number of properties.\n          size++;\n          // Deep compare each member.\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n      // Ensure that both objects contain the same number of properties.\n      if (result) {\n        for (key in b) {\n          if (_.has(b, key) && !(size--)) break;\n        }\n        result = !size;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    return obj === Object(obj);\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) == '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return !!(obj && _.has(obj, 'callee'));\n    };\n  }\n\n  // Optimize `isFunction` if appropriate.\n  if (typeof (/./) !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj === 'function';\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj != +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iterators.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iterator, context) {\n    var accum = Array(Math.max(0, n));\n    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // List of HTML entities for escaping.\n  var entityMap = {\n    escape: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      \"'\": '&#x27;'\n    }\n  };\n  entityMap.unescape = _.invert(entityMap.escape);\n\n  // Regexes containing the keys and values listed immediately above.\n  var entityRegexes = {\n    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),\n    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')\n  };\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  _.each(['escape', 'unescape'], function(method) {\n    _[method] = function(string) {\n      if (string == null) return '';\n      return ('' + string).replace(entityRegexes[method], function(match) {\n        return entityMap[method][match];\n      });\n    };\n  });\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\t':     't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  _.template = function(text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset)\n        .replace(escaper, function(match) { return '\\\\' + escapes[match]; });\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      }\n      if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      }\n      if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n      index = offset + match.length;\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + \"return __p;\\n\";\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    if (data) return render(data, _);\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function, which will delegate to the wrapper.\n  _.chain = function(obj) {\n    return _(obj).chain();\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  _.extend(_.prototype, {\n\n    // Start chaining a wrapped Underscore object.\n    chain: function() {\n      this._chain = true;\n      return this;\n    },\n\n    // Extracts the result from a wrapped and chained object.\n    value: function() {\n      return this._wrapped;\n    }\n\n  });\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/underscore/_undersstring-2.3.3.js":"//  Underscore.string\n//  (c) 2010 Esa-Matti Suuronen <esa-matti aet suuronen dot org>\n//  Underscore.string is freely distributable under the terms of the MIT license.\n//  Documentation: https://github.com/epeli/underscore.string\n//  Some code is borrowed from MooTools and Alexandru Marasteanu.\n//  Version '2.3.2'\n\n!function(root, String){\n  'use strict';\n\n  // Defining helper functions.\n\n  var nativeTrim = String.prototype.trim;\n  var nativeTrimRight = String.prototype.trimRight;\n  var nativeTrimLeft = String.prototype.trimLeft;\n\n  var parseNumber = function(source) { return source * 1 || 0; };\n\n  var strRepeat = function(str, qty){\n    if (qty < 1) return '';\n    var result = '';\n    while (qty > 0) {\n      if (qty & 1) result += str;\n      qty >>= 1, str += str;\n    }\n    return result;\n  };\n\n  var slice = [].slice;\n\n  var defaultToWhiteSpace = function(characters) {\n    if (characters == null)\n      return '\\\\s';\n    else if (characters.source)\n      return characters.source;\n    else\n      return '[' + _s.escapeRegExp(characters) + ']';\n  };\n\n  // Helper for toBoolean\n  function boolMatch(s, matchers) {\n    var i, matcher, down = s.toLowerCase();\n    matchers = [].concat(matchers);\n    for (i = 0; i < matchers.length; i += 1) {\n      matcher = matchers[i];\n      if (!matcher) continue;\n      if (matcher.test && matcher.test(s)) return true;\n      if (matcher.toLowerCase() === down) return true;\n    }\n  }\n\n  var escapeChars = {\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n    amp: '&',\n    apos: \"'\"\n  };\n\n  var reversedEscapeChars = {};\n  for(var key in escapeChars) reversedEscapeChars[escapeChars[key]] = key;\n  reversedEscapeChars[\"'\"] = '#39';\n\n  // sprintf() for JavaScript 0.7-beta1\n  // http://www.diveintojavascript.com/projects/javascript-sprintf\n  //\n  // Copyright (c) Alexandru Marasteanu <alexaholic [at) gmail (dot] com>\n  // All rights reserved.\n\n  var sprintf = (function() {\n    function get_type(variable) {\n      return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase();\n    }\n\n    var str_repeat = strRepeat;\n\n    var str_format = function() {\n      if (!str_format.cache.hasOwnProperty(arguments[0])) {\n        str_format.cache[arguments[0]] = str_format.parse(arguments[0]);\n      }\n      return str_format.format.call(null, str_format.cache[arguments[0]], arguments);\n    };\n\n    str_format.format = function(parse_tree, argv) {\n      var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length;\n      for (i = 0; i < tree_length; i++) {\n        node_type = get_type(parse_tree[i]);\n        if (node_type === 'string') {\n          output.push(parse_tree[i]);\n        }\n        else if (node_type === 'array') {\n          match = parse_tree[i]; // convenience purposes only\n          if (match[2]) { // keyword argument\n            arg = argv[cursor];\n            for (k = 0; k < match[2].length; k++) {\n              if (!arg.hasOwnProperty(match[2][k])) {\n                throw new Error(sprintf('[_.sprintf] property \"%s\" does not exist', match[2][k]));\n              }\n              arg = arg[match[2][k]];\n            }\n          } else if (match[1]) { // positional argument (explicit)\n            arg = argv[match[1]];\n          }\n          else { // positional argument (implicit)\n            arg = argv[cursor++];\n          }\n\n          if (/[^s]/.test(match[8]) && (get_type(arg) != 'number')) {\n            throw new Error(sprintf('[_.sprintf] expecting number but found %s', get_type(arg)));\n          }\n          switch (match[8]) {\n            case 'b': arg = arg.toString(2); break;\n            case 'c': arg = String.fromCharCode(arg); break;\n            case 'd': arg = parseInt(arg, 10); break;\n            case 'e': arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential(); break;\n            case 'f': arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg); break;\n            case 'o': arg = arg.toString(8); break;\n            case 's': arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg); break;\n            case 'u': arg = Math.abs(arg); break;\n            case 'x': arg = arg.toString(16); break;\n            case 'X': arg = arg.toString(16).toUpperCase(); break;\n          }\n          arg = (/[def]/.test(match[8]) && match[3] && arg >= 0 ? '+'+ arg : arg);\n          pad_character = match[4] ? match[4] == '0' ? '0' : match[4].charAt(1) : ' ';\n          pad_length = match[6] - String(arg).length;\n          pad = match[6] ? str_repeat(pad_character, pad_length) : '';\n          output.push(match[5] ? arg + pad : pad + arg);\n        }\n      }\n      return output.join('');\n    };\n\n    str_format.cache = {};\n\n    str_format.parse = function(fmt) {\n      var _fmt = fmt, match = [], parse_tree = [], arg_names = 0;\n      while (_fmt) {\n        if ((match = /^[^\\x25]+/.exec(_fmt)) !== null) {\n          parse_tree.push(match[0]);\n        }\n        else if ((match = /^\\x25{2}/.exec(_fmt)) !== null) {\n          parse_tree.push('%');\n        }\n        else if ((match = /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-fosuxX])/.exec(_fmt)) !== null) {\n          if (match[2]) {\n            arg_names |= 1;\n            var field_list = [], replacement_field = match[2], field_match = [];\n            if ((field_match = /^([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n              field_list.push(field_match[1]);\n              while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                if ((field_match = /^\\.([a-z_][a-z_\\d]*)/i.exec(replacement_field)) !== null) {\n                  field_list.push(field_match[1]);\n                }\n                else if ((field_match = /^\\[(\\d+)\\]/.exec(replacement_field)) !== null) {\n                  field_list.push(field_match[1]);\n                }\n                else {\n                  throw new Error('[_.sprintf] huh?');\n                }\n              }\n            }\n            else {\n              throw new Error('[_.sprintf] huh?');\n            }\n            match[2] = field_list;\n          }\n          else {\n            arg_names |= 2;\n          }\n          if (arg_names === 3) {\n            throw new Error('[_.sprintf] mixing positional and named placeholders is not (yet) supported');\n          }\n          parse_tree.push(match);\n        }\n        else {\n          throw new Error('[_.sprintf] huh?');\n        }\n        _fmt = _fmt.substring(match[0].length);\n      }\n      return parse_tree;\n    };\n\n    return str_format;\n  })();\n\n\n\n  // Defining underscore.string\n\n  var _s = {\n\n    VERSION: '2.3.0',\n\n    isBlank: function(str){\n      if (str == null) str = '';\n      return (/^\\s*$/).test(str);\n    },\n\n    stripTags: function(str){\n      if (str == null) return '';\n      return String(str).replace(/<\\/?[^>]+>/g, '');\n    },\n\n    capitalize : function(str){\n      str = str == null ? '' : String(str);\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    chop: function(str, step){\n      if (str == null) return [];\n      str = String(str);\n      step = ~~step;\n      return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n    },\n\n    clean: function(str){\n      return _s.strip(str).replace(/\\s+/g, ' ');\n    },\n\n    count: function(str, substr){\n      if (str == null || substr == null) return 0;\n\n      str = String(str);\n      substr = String(substr);\n\n      var count = 0,\n        pos = 0,\n        length = substr.length;\n\n      while (true) {\n        pos = str.indexOf(substr, pos);\n        if (pos === -1) break;\n        count++;\n        pos += length;\n      }\n\n      return count;\n    },\n\n    chars: function(str) {\n      if (str == null) return [];\n      return String(str).split('');\n    },\n\n    swapCase: function(str) {\n      if (str == null) return '';\n      return String(str).replace(/\\S/g, function(c){\n        return c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase();\n      });\n    },\n\n    escapeHTML: function(str) {\n      if (str == null) return '';\n      return String(str).replace(/[&<>\"']/g, function(m){ return '&' + reversedEscapeChars[m] + ';'; });\n    },\n\n    unescapeHTML: function(str) {\n      if (str == null) return '';\n      return String(str).replace(/\\&([^;]+);/g, function(entity, entityCode){\n        var match;\n\n        if (entityCode in escapeChars) {\n          return escapeChars[entityCode];\n        } else if (match = entityCode.match(/^#x([\\da-fA-F]+)$/)) {\n          return String.fromCharCode(parseInt(match[1], 16));\n        } else if (match = entityCode.match(/^#(\\d+)$/)) {\n          return String.fromCharCode(~~match[1]);\n        } else {\n          return entity;\n        }\n      });\n    },\n\n    escapeRegExp: function(str){\n      if (str == null) return '';\n      return String(str).replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n    },\n\n    splice: function(str, i, howmany, substr){\n      var arr = _s.chars(str);\n      arr.splice(~~i, ~~howmany, substr);\n      return arr.join('');\n    },\n\n    insert: function(str, i, substr){\n      return _s.splice(str, i, 0, substr);\n    },\n\n    include: function(str, needle){\n      if (needle === '') return true;\n      if (str == null) return false;\n      return String(str).indexOf(needle) !== -1;\n    },\n\n    join: function() {\n      var args = slice.call(arguments),\n        separator = args.shift();\n\n      if (separator == null) separator = '';\n\n      return args.join(separator);\n    },\n\n    lines: function(str) {\n      if (str == null) return [];\n      return String(str).split(\"\\n\");\n    },\n\n    reverse: function(str){\n      return _s.chars(str).reverse().join('');\n    },\n\n    startsWith: function(str, starts){\n      if (starts === '') return true;\n      if (str == null || starts == null) return false;\n      str = String(str); starts = String(starts);\n      return str.length >= starts.length && str.slice(0, starts.length) === starts;\n    },\n\n    endsWith: function(str, ends){\n      if (ends === '') return true;\n      if (str == null || ends == null) return false;\n      str = String(str); ends = String(ends);\n      return str.length >= ends.length && str.slice(str.length - ends.length) === ends;\n    },\n\n    succ: function(str){\n      if (str == null) return '';\n      str = String(str);\n      return str.slice(0, -1) + String.fromCharCode(str.charCodeAt(str.length-1) + 1);\n    },\n\n    titleize: function(str){\n      if (str == null) return '';\n      str  = String(str).toLowerCase();\n      return str.replace(/(?:^|\\s|-)\\S/g, function(c){ return c.toUpperCase(); });\n    },\n\n    camelize: function(str){\n      return _s.trim(str).replace(/[-_\\s]+(.)?/g, function(match, c){ return c ? c.toUpperCase() : \"\"; });\n    },\n\n    underscored: function(str){\n      return _s.trim(str).replace(/([a-z\\d])([A-Z]+)/g, '$1_$2').replace(/[-\\s]+/g, '_').toLowerCase();\n    },\n\n    dasherize: function(str){\n      return _s.trim(str).replace(/([A-Z])/g, '-$1').replace(/[-_\\s]+/g, '-').toLowerCase();\n    },\n\n    classify: function(str){\n      return _s.titleize(String(str).replace(/[\\W_]/g, ' ')).replace(/\\s/g, '');\n    },\n\n    humanize: function(str){\n      return _s.capitalize(_s.underscored(str).replace(/_id$/,'').replace(/_/g, ' '));\n    },\n\n    trim: function(str, characters){\n      if (str == null) return '';\n      if (!characters && nativeTrim) return nativeTrim.call(str);\n      characters = defaultToWhiteSpace(characters);\n      return String(str).replace(new RegExp('\\^' + characters + '+|' + characters + '+$', 'g'), '');\n    },\n\n    ltrim: function(str, characters){\n      if (str == null) return '';\n      if (!characters && nativeTrimLeft) return nativeTrimLeft.call(str);\n      characters = defaultToWhiteSpace(characters);\n      return String(str).replace(new RegExp('^' + characters + '+'), '');\n    },\n\n    rtrim: function(str, characters){\n      if (str == null) return '';\n      if (!characters && nativeTrimRight) return nativeTrimRight.call(str);\n      characters = defaultToWhiteSpace(characters);\n      return String(str).replace(new RegExp(characters + '+$'), '');\n    },\n\n    truncate: function(str, length, truncateStr){\n      if (str == null) return '';\n      str = String(str); truncateStr = truncateStr || '...';\n      length = ~~length;\n      return str.length > length ? str.slice(0, length) + truncateStr : str;\n    },\n\n    /**\n     * _s.prune: a more elegant version of truncate\n     * prune extra chars, never leaving a half-chopped word.\n     * @author github.com/rwz\n     */\n    prune: function(str, length, pruneStr){\n      if (str == null) return '';\n\n      str = String(str); length = ~~length;\n      pruneStr = pruneStr != null ? String(pruneStr) : '...';\n\n      if (str.length <= length) return str;\n\n      var tmpl = function(c){ return c.toUpperCase() !== c.toLowerCase() ? 'A' : ' '; },\n        template = str.slice(0, length+1).replace(/.(?=\\W*\\w*$)/g, tmpl); // 'Hello, world' -> 'HellAA AAAAA'\n\n      if (template.slice(template.length-2).match(/\\w\\w/))\n        template = template.replace(/\\s*\\S+$/, '');\n      else\n        template = _s.rtrim(template.slice(0, template.length-1));\n\n      return (template+pruneStr).length > str.length ? str : str.slice(0, template.length)+pruneStr;\n    },\n\n    words: function(str, delimiter) {\n      if (_s.isBlank(str)) return [];\n      return _s.trim(str, delimiter).split(delimiter || /\\s+/);\n    },\n\n    pad: function(str, length, padStr, type) {\n      str = str == null ? '' : String(str);\n      length = ~~length;\n\n      var padlen  = 0;\n\n      if (!padStr)\n        padStr = ' ';\n      else if (padStr.length > 1)\n        padStr = padStr.charAt(0);\n\n      switch(type) {\n        case 'right':\n          padlen = length - str.length;\n          return str + strRepeat(padStr, padlen);\n        case 'both':\n          padlen = length - str.length;\n          return strRepeat(padStr, Math.ceil(padlen/2)) + str\n                  + strRepeat(padStr, Math.floor(padlen/2));\n        default: // 'left'\n          padlen = length - str.length;\n          return strRepeat(padStr, padlen) + str;\n        }\n    },\n\n    lpad: function(str, length, padStr) {\n      return _s.pad(str, length, padStr);\n    },\n\n    rpad: function(str, length, padStr) {\n      return _s.pad(str, length, padStr, 'right');\n    },\n\n    lrpad: function(str, length, padStr) {\n      return _s.pad(str, length, padStr, 'both');\n    },\n\n    sprintf: sprintf,\n\n    vsprintf: function(fmt, argv){\n      argv.unshift(fmt);\n      return sprintf.apply(null, argv);\n    },\n\n    toNumber: function(str, decimals) {\n      if (!str) return 0;\n      str = _s.trim(str);\n      if (!str.match(/^-?\\d+(?:\\.\\d+)?$/)) return NaN;\n      return parseNumber(parseNumber(str).toFixed(~~decimals));\n    },\n\n    numberFormat : function(number, dec, dsep, tsep) {\n      if (isNaN(number) || number == null) return '';\n\n      number = number.toFixed(~~dec);\n      tsep = typeof tsep == 'string' ? tsep : ',';\n\n      var parts = number.split('.'), fnums = parts[0],\n        decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n\n      return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1' + tsep) + decimals;\n    },\n\n    strRight: function(str, sep){\n      if (str == null) return '';\n      str = String(str); sep = sep != null ? String(sep) : sep;\n      var pos = !sep ? -1 : str.indexOf(sep);\n      return ~pos ? str.slice(pos+sep.length, str.length) : str;\n    },\n\n    strRightBack: function(str, sep){\n      if (str == null) return '';\n      str = String(str); sep = sep != null ? String(sep) : sep;\n      var pos = !sep ? -1 : str.lastIndexOf(sep);\n      return ~pos ? str.slice(pos+sep.length, str.length) : str;\n    },\n\n    strLeft: function(str, sep){\n      if (str == null) return '';\n      str = String(str); sep = sep != null ? String(sep) : sep;\n      var pos = !sep ? -1 : str.indexOf(sep);\n      return ~pos ? str.slice(0, pos) : str;\n    },\n\n    strLeftBack: function(str, sep){\n      if (str == null) return '';\n      str += ''; sep = sep != null ? ''+sep : sep;\n      var pos = str.lastIndexOf(sep);\n      return ~pos ? str.slice(0, pos) : str;\n    },\n\n    toSentence: function(array, separator, lastSeparator, serial) {\n      separator = separator || ', ';\n      lastSeparator = lastSeparator || ' and ';\n      var a = array.slice(), lastMember = a.pop();\n\n      if (array.length > 2 && serial) lastSeparator = _s.rtrim(separator) + lastSeparator;\n\n      return a.length ? a.join(separator) + lastSeparator + lastMember : lastMember;\n    },\n\n    toSentenceSerial: function() {\n      var args = slice.call(arguments);\n      args[3] = true;\n      return _s.toSentence.apply(_s, args);\n    },\n\n    slugify: function(str) {\n      if (str == null) return '';\n\n      var from  = \"ąàáäâãåæăćęèéëêìíïîłńòóöôõøśșțùúüûñçżź\",\n          to    = \"aaaaaaaaaceeeeeiiiilnoooooosstuuuunczz\",\n          regex = new RegExp(defaultToWhiteSpace(from), 'g');\n\n      str = String(str).toLowerCase().replace(regex, function(c){\n        var index = from.indexOf(c);\n        return to.charAt(index) || '-';\n      });\n\n      return _s.dasherize(str.replace(/[^\\w\\s-]/g, ''));\n    },\n\n    surround: function(str, wrapper) {\n      return [wrapper, str, wrapper].join('');\n    },\n\n    quote: function(str, quoteChar) {\n      return _s.surround(str, quoteChar || '\"');\n    },\n\n    unquote: function(str, quoteChar) {\n      quoteChar = quoteChar || '\"';\n      if (str[0] === quoteChar && str[str.length-1] === quoteChar)\n        return str.slice(1,str.length-1);\n      else return str;\n    },\n\n    exports: function() {\n      var result = {};\n\n      for (var prop in this) {\n        if (!this.hasOwnProperty(prop) || prop.match(/^(?:include|contains|reverse)$/)) continue;\n        result[prop] = this[prop];\n      }\n\n      return result;\n    },\n\n    repeat: function(str, qty, separator){\n      if (str == null) return '';\n\n      qty = ~~qty;\n\n      // using faster implementation if separator is not needed;\n      if (separator == null) return strRepeat(String(str), qty);\n\n      // this one is about 300x slower in Google Chrome\n      for (var repeat = []; qty > 0; repeat[--qty] = str) {}\n      return repeat.join(separator);\n    },\n\n    naturalCmp: function(str1, str2){\n      if (str1 == str2) return 0;\n      if (!str1) return -1;\n      if (!str2) return 1;\n\n      var cmpRegex = /(\\.\\d+)|(\\d+)|(\\D+)/g,\n        tokens1 = String(str1).toLowerCase().match(cmpRegex),\n        tokens2 = String(str2).toLowerCase().match(cmpRegex),\n        count = Math.min(tokens1.length, tokens2.length);\n\n      for(var i = 0; i < count; i++) {\n        var a = tokens1[i], b = tokens2[i];\n\n        if (a !== b){\n          var num1 = parseInt(a, 10);\n          if (!isNaN(num1)){\n            var num2 = parseInt(b, 10);\n            if (!isNaN(num2) && num1 - num2)\n              return num1 - num2;\n          }\n          return a < b ? -1 : 1;\n        }\n      }\n\n      if (tokens1.length === tokens2.length)\n        return tokens1.length - tokens2.length;\n\n      return str1 < str2 ? -1 : 1;\n    },\n\n    levenshtein: function(str1, str2) {\n      if (str1 == null && str2 == null) return 0;\n      if (str1 == null) return String(str2).length;\n      if (str2 == null) return String(str1).length;\n\n      str1 = String(str1); str2 = String(str2);\n\n      var current = [], prev, value;\n\n      for (var i = 0; i <= str2.length; i++)\n        for (var j = 0; j <= str1.length; j++) {\n          if (i && j)\n            if (str1.charAt(j - 1) === str2.charAt(i - 1))\n              value = prev;\n            else\n              value = Math.min(current[j], current[j - 1], prev) + 1;\n          else\n            value = i + j;\n\n          prev = current[j];\n          current[j] = value;\n        }\n\n      return current.pop();\n    },\n\n    toBoolean: function(str, trueValues, falseValues) {\n      if (typeof str === \"number\") str = \"\" + str;\n      if (typeof str !== \"string\") return !!str;\n      str = _s.trim(str);\n      if (boolMatch(str, trueValues || [\"true\", \"1\"])) return true;\n      if (boolMatch(str, falseValues || [\"false\", \"0\"])) return false;\n    }\n  };\n\n  // Aliases\n\n  _s.strip    = _s.trim;\n  _s.lstrip   = _s.ltrim;\n  _s.rstrip   = _s.rtrim;\n  _s.center   = _s.lrpad;\n  _s.rjust    = _s.lpad;\n  _s.ljust    = _s.rpad;\n  _s.contains = _s.include;\n  _s.q        = _s.quote;\n  _s.toBool   = _s.toBoolean;\n\n  // Exporting\n\n  // CommonJS module is defined\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports)\n      module.exports = _s;\n\n    exports._s = _s;\n  }\n\n  // Register as a named module with AMD.\n  if (typeof define === 'function' && define.amd)\n    define('underscore.string', [], function(){ return _s; });\n\n\n  // Integrate with Underscore.js if defined\n  // or create our own underscore object.\n  root._ = root._ || {};\n  root._.string = root._.str = _s;\n}(this, String);\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/gruntfile.js":"\n    module.exports = function (grunt) {\n\n        grunt.initConfig({\n\n        // define source files and their destinations\n        uglify: {\n            files: {\n                src: \"node_modules/**/*.js\", // source files mask\n                dest: \"minified/\", // destination folder\n                expand: true, // allow dynamic building\n                flatten: true, // remove all unnecessary nesting\n                ext: \".min.js\" // replace .js to .min.js\n                }\n            }\n        });\n\n        // load plugins\n        grunt.loadNpmTasks(\"grunt-contrib-uglify\");\n\n        // register at least this one task\n        grunt.registerTask(\"default\", [ \"uglify\" ]);\n\n    };","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/binaries/Minifiers.js":"\n\n    \"use strict\";\n\n\n\t/**\n\t *\n\t */\n    var Minifier = function(){\n\n        this.compressor = require(\"node-minify\");\n\n        this.files = [\n            \"node_modules/colors/colors.js\"\n        ];\n\n        new this.compressor.minify({\n            type: \"no-compress\",\n            fileIn: this.files,\n            fileOut: \"minified/test.js\"\n        });\n\n    };\n\n\n    new Minifier();\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/binaries/Plugins.js":"\n\n    \"use strict\";\n\n\n    /**\n     *  Plugins is run on every change in a website folder\n     */\n    var Plugins = function(){\n\n        require(\"../library/_Boilerplate\").call(this);\n        this.createTempFolder();\n\n    };\n\n\n    require(\"util\").inherits(Plugins, require(\"../library/_Boilerplate\"));\n\n\n\n    /**\n     *  Create the build folder with all files as is in normal folders\n     */\n    Plugins.prototype.createTempFolder = function(){\n\n        var that = this;\n        var module;\n\n        // if it's generating, watching of files is disabled\n        this.generatingTime = +new Date();\n        global.downpress.isGenerating = true;\n\n\n        // creates a build folder and copy all files there\n        module = require(\"../mdls/Build_Create\")();\n        module.on(\"ready\", function(){\n            that.buildCopied();\n        });\n\n    };\n\n\n    /**\n     *  When the build folder is copied as is to new directory from a website root\n     */\n    Plugins.prototype.buildCopied = function(){\n\n        var that = this;\n        var i = 0;\n        var module;\n\n        this.on(\"built\", function(){\n            i++;\n            if (i===3) { that.exportToFileSystem(); }\n        });\n\n        // global.downpress.statics\n        module = require(\"../mdls/Statics\")();\n        module.on(\"ready\", function(){\n            that.emit(\"built\");\n\t    });\n\n\t    // global.downpress.templates\n        module = require(\"../mdls/Templates\")();\n        module.on(\"ready\", function(){\n\t\t    that.emit(\"built\");\n\t    });\n\n\t    // global.downpress.markdowns\n        module = require(\"../mdls/Markdowns\")();\n        module.on(\"ready\", function(){\n\t\t    that.emit(\"built\");\n\t    });\n\n    };\n\n\n    /**\n     *  Create all necessary objects which are accessible also on the screen\n     */\n    Plugins.prototype.exportToFileSystem = function(){\n\n        var that = this;\n        var i = 0;\n        var module;\n\n        this.on(\"exporting\", function(){\n            i++;\n            if (i===3) { that.finishedGenerating();  }\n        });\n\n        module = require(\"../mdls/Generate\")();\n        module.on(\"ready\", function(){\n            that.emit(\"exporting\");\n        });\n\n        module = require(\"../mdls/Sitemap\")();\n        module.on(\"ready\", function(){\n            that.emit(\"exporting\");\n        });\n\n        module = require(\"../mdls/OfflineManifest\")();\n        module.on(\"ready\", function(){\n            that.emit(\"exporting\");\n        });\n\n    };\n\n\n    /**\n     *  This should be run just first time on downpress.isInit\n     */\n    Plugins.prototype.finishedGenerating = function(){\n\n        if (global.downpress.isInitial) {\n            var generatingTime = (+new Date()) - this.generatingTime;\n            this.log(\"regenerated in \" + generatingTime + \"ms\");\n        }\n\n\t    // generating is finished\n\t    global.downpress.isGenerating = false;\n        global.downpress.isInitial = false;\n\n    };\n\n\n    module.exports = function(){\n\n\n        new Plugins();\n\n    };\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/Generate.js":"\n\n    \"use strict\";\n\n\n    var filesystem = require(\"fs\");\n\n\n    /**\n     *  Create all necessary objects which are accessible also on the screen\n     */\n    var Generate = function() {\n\n        require(\"../library/_Boilerplate\").call(this);\n\n        this.parseMarkdowns();\n        this.removeMdFilesInBuild();\n\n    };\n\n\n    require(\"util\").inherits(Generate, require(\"../library/_Boilerplate\"));\n\n\n    /**\n     *\n     */\n    Generate.prototype.parseMarkdowns = function(){\n\n        var that = this;\n\t    var markdowns = global.downpress.markdowns;\n\n\t    // one by one create and generate every one markdown file\n\t    markdowns.forEach(function(element){\n            that.buildMarkdownAndSaveIt(element);\n        });\n\n    };\n\n\n    /**\n     *  Build markdown and save it to the build folder\n     */\n    Generate.prototype.buildMarkdownAndSaveIt = function(scopeMarkdown){\n\n\t    // current Template string\n\t    var metaTagTemplate = scopeMarkdown.template;\n\t    var scopeTemplate = global.downpress.templates[metaTagTemplate];\n\n\t    // if user defined non-existing template or no header, skip file\n\t    if (!scopeTemplate) {  return; }\n\n        // try build a next fancy markdown file via templates\n\t    try {\n\t\t    var html = this.createTemplateObject(scopeTemplate, scopeMarkdown);\n\t    } catch(err) {\n\t\t    this.log(scopeMarkdown._origin + \" \" + err, true);\n\t    }\n\n        // FS SAVE to new position to %build folder\n        var buildDir = \"./\" + global.downpress.config[\"dir-build\"];\n\t    var htmlPath = buildDir+scopeMarkdown._path+scopeMarkdown._target;\n\t    this.createNewFile(htmlPath, html);\n\n    };\n\n\n    /**\n     *  Create a new file from given name and content\n     */\n    Generate.prototype.createNewFile = function(path, content){\n\n        this.fs.writeFileSync(path, content);\n\n    };\n\n\n    /**\n     *  Create a new file from given name and content\n     */\n    Generate.prototype.createTemplateObject = function(template, content){\n\n\t    return this.underscore.template(template, {\n\t\t    _ : this.underscore,\n\t\t    underscore : this.underscore,\n\t\t    local : content,\n\t\t    markdowns : global.downpress.markdowns,\n\t\t    statics : global.downpress.statics,\n\t\t    templates : global.downpress.templates\n\t    });\n\n    };\n\n\n    /**\n     *\n     */\n    Generate.prototype.removeMdFilesInBuild = function(){\n\n        var markdowns = global.downpress.markdowns;\n        var buildDir = \"./\" + global.downpress.config[\"dir-build\"];\n        var that = this;\n\n        var i = 0;\n\n        function callbackRemovedFiles(error){\n            if (error) { throw error; }\n            i++;\n            if (i===markdowns.length) { that.emit(\"ready\"); }\n        }\n\n        markdowns.forEach(function(file){\n            var path = buildDir + file._path + file._origin;\n            that.fs.unlink(path, callbackRemovedFiles);\n        });\n\n    };\n\n\n\n    module.exports = function(){\n        return new Generate();\n    };\n\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/Markdowns.js":"\n\n    \"use strict\";\n\n\n    /**\n     *  Creates markdown object with parsed HTML with used layouts\n     */\n    var Markdowns = function() {\n\n\t    require(\"../library/_Boilerplate\").call(this);\n        this.getAllMarkdownsObjects();\n\n    };\n\n\n    require(\"util\").inherits(Markdowns, require(\"../library/_Boilerplate\"));\n\n\n    /**\n     *  Get list of all files in root of project (also non-markdown files)\n     */\n    Markdowns.prototype.getAllMarkdownsObjects = function(){\n\n\t    var that = this;\n\t    var CURRENT_FOLDER = \".\";\n\n\t    this.walkFiles(CURRENT_FOLDER, function(files){\n\t\t    that.markdowns = files;\n\t\t\tthat.removeTemplatesAndBuildFolder();\n\t    });\n\n    };\n\n\n    /**\n     *  From this.markdowns should be removed all files from %build and %templates\n     */\n    Markdowns.prototype.removeTemplatesAndBuildFolder = function() {\n\n\t    var templatesDir = \"./\" + global.downpress.config[\"dir-templates\"];\n\t    var buildDir = \"./\" + global.downpress.config[\"dir-build\"];\n\n\t    function isNotDsStore(file){\n\t\t    return file.indexOf(\".DS_Store\") <= -1;\n\t    }\n\n\t    function isNotBuildDir(file){\n\t\t    return file.indexOf(buildDir)<=-1;\n\t    }\n\n\t    function isNotTemplatesDir(file){\n\t\t    return file.indexOf(templatesDir)<=-1;\n\t    }\n\n\t    function isOnlyMarkdown(file){\n\t\t    var extension = file.substr(file.lastIndexOf(\".\"));\n\t\t    return (extension===\".md\");\n\t    }\n\n\t    this.markdowns = this.markdowns.filter(isNotDsStore);\n\t    this.markdowns = this.markdowns.filter(isNotTemplatesDir);\n\t    this.markdowns = this.markdowns.filter(isNotBuildDir);\n\t    this.markdowns = this.markdowns.filter(isOnlyMarkdown);\n\n        // go to next function and parse all files to objects\n\t    this.readMarkdownsOneByOne();\n\n    };\n\n\n    /**\n     *  Read all Markdown files in project (content) and put into object this.markdowns\n     */\n    Markdowns.prototype.readMarkdownsOneByOne = function() {\n\n\t    var that = this;\n\t    var newMarkdowns = [];\n\n\t    var i=0;\n\t    function callbackOnFileRead(){\n\t\t\ti++;\n            if (that.markdowns.length===i) { everythingReady(); }\n\t    }\n\n\t    function readMarkdown(filePath){\n            that.fs.readFile(filePath, function(error, rawData){\n                fileReadDone(error, rawData, i);\n\t\t    });\n\t    }\n\n\t    function fileReadDone(error, rawData, i){\n\t\t    if (error) { throw error }\n\t\t    var content = { data : rawData+\"\", path : that.markdowns[i] };\n\t\t    newMarkdowns.push(content);\n            callbackOnFileRead();\n\t    }\n\n\t    function everythingReady(){\n            that.markdowns = newMarkdowns;\n\t\t    that.parseAllMarkdowns();\n\t    }\n\n\t    this.markdowns.forEach(readMarkdown);\n\n    };\n\n\n    /**\n     *  Parse all this.markdowns and get header (meta tags) and body (user content)\n     */\n    Markdowns.prototype.parseAllMarkdowns = function() {\n\n\t    var that = this;\n\t    var allMarkdowns = [];\n\n\t    function getDependencies(markdownObj){\n\t\t    var resultObj = that.getHeaderMetaTags(markdownObj.data);\n\t\t    resultObj._content = that.getContentBody(markdownObj);\n\t\t    resultObj._path = markdownObj.path;\n\t\t    if (resultObj.template) { allMarkdowns.push(resultObj); }\n\t    }\n\n\t    this.markdowns.forEach(getDependencies);\n\n\t    // continue\n\t    this.markdowns = allMarkdowns;\n\t    this.addAllMetaTags();\n\n    };\n\n\n    /**\n     *  All all other data like path, origin, target, uniqID, content\n     */\n    Markdowns.prototype.addAllMetaTags = function() {\n\n\t\t// get only markdowns, filter by containing of \".md\" string\n\t\t// TODO should be improved = only if .md is on the end\n\t\t// TODO not it detects also if md is in middle\n\n\t    var that = this;\n\n\t    // parse all markdowns and get nice huge object of markdowns\n\t\tthis.markdowns.forEach(function(markdownObj, i){\n\n\t\t\t// create a path without the file name\n\t\t\tvar path = markdownObj._path;\n\t\t\tvar cleanPath = path.substr(0, path.lastIndexOf(\"/\")+1);\n\t\t\tthat.markdowns[i]._path = cleanPath.substr(1);\n\n\t\t\t// add others attributes and tags\n\t\t\tthat.markdowns[i]._origin = path.substr(path.lastIndexOf(\"/\")+1);\n\t\t\tthat.markdowns[i]._target = path.substr(path.lastIndexOf(\"/\")+1);\n\t\t\tthat.markdowns[i]._target = that.markdowns[i]._target.replace(\".md\", \".html\");\n\n\t\t\tthat.markdowns[i]._uniqid = that.getRandomID();\n\t\t\tthat.markdowns[i]._content = require(\"marked\")(markdownObj._content);\n\n\t\t});\n\n\t\t// DONE\n\n\t\tglobal.downpress.markdowns = this.markdowns;\n\t    this.emit(\"ready\");\n\n    };\n\n\n    /**\n     *  Parse content of the markdown object and get all meta tags\n     */\n    Markdowns.prototype.getHeaderMetaTags = function(markdownObj) {\n\n\t    // TODO all relevant future question which need to be solved\n\t    // this needs to be extremely sanitized\n\t    // what if delimiter is on the end of file?\n\t    // what if in markdown file is more delimiters?\n\t    // what if user will change delimiter to MD syntax?\n\t    // what if user will use just one delimiter?\n\n\t    var that = this;\n\t    var headerObj = {};\n\n\t    // crop markdown file by new line in editor\n\t    var croppedLines = markdownObj.split(/\\n/);\n\n\t    // delimiter is by default \"---\" but can be changed by user\n\t    var delimiter = global.downpress.config[\"markdown-delimiter\"];\n\n\t    // find delimiters or markdown files (---)\n\t    var delimiterOne = croppedLines.indexOf(delimiter, 0);\n\t    var delimiterTwo = croppedLines.indexOf(delimiter, 1);\n\n\t    // all lines between delimiters (first and second one)\n\t    var croppedHeader = croppedLines.slice(delimiterOne+1, delimiterTwo);\n\n\t    // create from lines objects with values and keywords\n\t    croppedHeader.forEach(function(oneLine){\n\t\t    var keyPairsObj = that.clearKeysAndValues(oneLine);\n\t\t    headerObj[keyPairsObj.title] = keyPairsObj.value;\n\t    });\n\n\t    // return all back\n\t    return headerObj;\n\n    };\n\n\n    /**\n     *  Separate from line strings to values and keys, separated by \":\" the default separator\n     */\n    Markdowns.prototype.clearKeysAndValues = function(oneLine) {\n\n\t    // separate strings by separator\n\t    var title = oneLine.substr(0, oneLine.indexOf(\":\"));\n\t    var value = oneLine.substr(oneLine.indexOf(\":\")+1);\n\n\t    // clean strings from empty spaces in the end\n\t    title = this.underscore.clean(title);\n\t    value = this.underscore.clean(value);\n\n\t    return { title : title, value : value };\n\n    };\n\n\n    /**\n     *  Parse Object of parsed markdown file and save it to the content string\n     */\n    Markdowns.prototype.getContentBody = function(markdownObj) {\n\n\t    // raw data of file\n\t    var contentOfMarkdown = markdownObj.data;\n\n\t    // crop markdown file by new line in editor\n\t    var croppedLines = contentOfMarkdown.split(/\\n/);\n\n\t    // delimiter is by default \"---\" but can be changed by user\n\t    var delimiter = global.downpress.config[\"markdown-delimiter\"];\n\t    var delimiterTwo = croppedLines.indexOf(delimiter, 1);\n\n\t    // all lines after second delimiter\n\t    var croppedBody = croppedLines.slice(delimiterTwo+1);\n\n\t    // connect all lines together again\n\t    return croppedBody.join(\"\\n\");\n\n    };\n\n\n    /**\n     *  Generate Uniq ID for files, can be used like uniq identifier on screen\n     */\n    Markdowns.prototype.getRandomID = function() {\n\n\t    var random1 = Math.floor((Math.random()*800000)+100000);\n\t    var random2 = Math.floor((Math.random()*800000)+100000);\n\t    var random3 = Math.floor((Math.random()*800000)+100000);\n\n\t    return(random1+random2+random3).toString(36);\n\n    };\n\n\n    module.exports = function(){\n        return new Markdowns();\n    };\n\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/OfflineManifest.js":"\n\n    \"use strict\";\n\n\n    var OfflineManifest = function() {\n\n        require(\"../library/_Boilerplate\").call(this);\n\n        setTimeout((function(){\n            this.emit(\"ready\")\n        }).bind(this), 1);\n\n    };\n\n\n    require(\"util\").inherits(OfflineManifest, require(\"../library/_Boilerplate\"));\n\n\n    module.exports = function(){\n        return new OfflineManifest();\n    };","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/Sitemap.js":"\n\n    \"use strict\";\n\n\n    var Sitemap = function() {\n\n        require(\"../library/_Boilerplate\").call(this);\n\n        setTimeout((function(){\n            this.emit(\"ready\")\n        }).bind(this), 1);\n\n    };\n\n\n    require(\"util\").inherits(Sitemap, require(\"../library/_Boilerplate\"));\n\n\n    module.exports = function(){\n        return new Sitemap();\n    };","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/Statics.js":"\n\n    \"use strict\";\n\n\n    /**\n     *  Create an object with details of all files in your website\n     */\n    var Statics = function() {\n\n        require(\"../library/_Boilerplate\").call(this);\n\n        var that = this;\n\n        this.walkFiles(\".\", function(files){\n            that.statics = files;\n            that.removeIgnored();\n        });\n\n    };\n\n\n    require(\"util\").inherits(Statics, require(\"../library/_Boilerplate\"));\n\n\n    /**\n     *  Create an object with details of all files in your website\n     */\n    Statics.prototype.removeIgnored = function() {\n\n\t    var templatesDir = \"./\" + global.downpress.config[\"dir-templates\"];\n        var buildDir = \"./\" + global.downpress.config[\"dir-build\"];\n\n        function isNotDsStore(file){\n            return file.indexOf(\".DS_Store\") <= -1;\n        }\n\n        function isNotBuildDir(file){\n            return file.indexOf(buildDir)<=-1;\n        }\n\n        function isNotTemplatesDir(file){\n            return file.indexOf(templatesDir)<=-1;\n        }\n\n        this.statics = this.statics.filter(isNotDsStore);\n        this.statics = this.statics.filter(isNotTemplatesDir);\n        this.statics = this.statics.filter(isNotBuildDir);\n\n        // go to next function and parse all files to objects\n        this.parseToFileObjects();\n\n    };\n\n\n    /**\n     *  Parse to Statics Object\n     */\n    Statics.prototype.parseToFileObjects = function() {\n\n        var that = this;\n        var newObj = [];\n\n        this.statics.forEach(function(file, i){\n\n            newObj[i] = {};\n            newObj[i]._name = file.substr(file.lastIndexOf(\"/\")+1);\n            newObj[i]._extension = file.substr(file.lastIndexOf(\".\")+1);\n            newObj[i]._size = that.fs.statSync(file).size;\n            newObj[i]._path = file;\n            newObj[i]._uniqid = that.getRandomID();\n\n        });\n\n        // done, everything is ready\n        global.downpress.statics = newObj;\n        this.emit(\"ready\");\n\n    };\n\n\n    /**\n     *  Generate Uniq ID for files, can be used like uniq identifier on screen\n     */\n    Statics.prototype.getRandomID = function() {\n\n        var random1 = Math.floor((Math.random()*800000)+100000);\n        var random2 = Math.floor((Math.random()*800000)+100000);\n        var random3 = Math.floor((Math.random()*800000)+100000);\n\n        return(random1+random2+random3).toString(36);\n\n    };\n\n\n    module.exports = function(){\n        return new Statics();\n    };\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/Templates.js":"\n\n    \"use strict\";\n\n\n    /**\n     * Creates an object with all templates in %templates folder just like raw text\n     */\n    var Templates = function() {\n\n        require(\"../library/_Boilerplate\").call(this);\n\n\t    this.getAllTemplateFiles();\n\n    };\n\n\n    require(\"util\").inherits(Templates, require(\"../library/_Boilerplate\"));\n\n\n    /**\n     * Get all files in templates folder, also with weird non-html files\n     */\n    Templates.prototype.getAllTemplateFiles = function() {\n\n\t    var that = this;\n\t    var templatesDir = \"./\" + global.downpress.config[\"dir-templates\"];\n\n\t    this.walkFiles(templatesDir, function(files){\n\t\t    that.files = files;\n\t\t    that.removeNonHtmlFiles();\n\t    });\n\n    };\n\n\n    /**\n     * Remove all files which are not really templates and are don't HTML/HTM\n     */\n    Templates.prototype.removeNonHtmlFiles = function() {\n\n\t    this.parseAllTemplateFiles();\n\n    };\n\n\n    /**\n     * Read content of theme files and put into smart object downpress.templates\n     */\n    Templates.prototype.parseAllTemplateFiles = function() {\n\n\t    var that = this;\n\n\t    function forEverySingle(templatePath, i){\n\t\t    that.readFile(templatePath, i, that);\n\t    }\n\n        this.files.forEach(forEverySingle);\n\n    };\n\n\n    /**\n     * When file is read or with error or correctly\n     */\n    Templates.prototype.readFile = function(templatePath, i, that) {\n\n\t    this.templatesObj = {};\n\n\t    // convert path to the clear file name\n\t    var lastSlash = templatePath.lastIndexOf(\"/\")+1;\n\t    var fileName = templatePath.slice(lastSlash);\n\t    var templateName = fileName.split(\".html\")[0];\n\n\t    that.fs.readFile(templatePath, onFileReaded);\n\n\t    // when all files are already read and saved\n\t    function allDone(){\n\t\t    global.downpress.templates = that.templatesObj;\n\t\t    that.emit(\"ready\");\n\t    }\n\n\t    // when one specific file is read from filesystem\n\t    function onFileReaded(err, rawContent){\n\t\t    if (err) { throw err; }\n\t\t    that.templatesObj[templateName] = rawContent+\"\";\n\t\t    var howManyTemplates = that.files.length-1;\n\t\t    if (howManyTemplates===i) { allDone(); }\n\t    }\n\n    };\n\n\n    module.exports = function(){\n        return new Templates();\n    };\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/admin_board/export.js":"\n\n    \"use strict\";\n\n\n    module.exports = function(callback){\n\n        callback();\n\n        return;\n\n        var express = require(\"express\");\n        var app = express();\n\n        app.configure(function(){\n            var dashboardFolder =  __dirname+\"/../dashboard/\";\n            app.use(\"/s/\", express.static(dashboardFolder));\n            app.set(\"views\", dashboardFolder);\n            app.engine(\"html\", require(\"ejs\").renderFile);\n            app.use(express.json());\n            app.use(express.urlencoded());\n            app.use(express.methodOverride());\n            app.use(app.router);\n        });\n\n        app.all(\"/\", function(req, res) {\n            res.render(\"index.html\", {});\n        });\n\n        app.use(express.logger(\"dev\")).listen(3009);\n\n    };\n","/home/travis/build/npmtest/node-npmtest-downpress/node_modules/downpress/mdls/admin_board/html/echo.js":"\n\n    \"use strict\";\n\n\n    require(\"colors\");\n\n\n    module.exports = function(message, isError) {\n\n        var log;\n\n        log = new Date().toLocaleTimeString().grey;\n        log += \" [mdown] - \".grey;\n\n        if (isError) { log += \"error: \".red.bold }\n        log += message.blue;\n\n        console.log(log);\n\n    };\n\n"}